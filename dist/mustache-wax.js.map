{"version":3,"file":"mustache-wax.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,qB;;;;;;UC7EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://wax/webpack/universalModuleDefinition","webpack://wax/./src/index.js","webpack://wax/webpack/bootstrap","webpack://wax/webpack/before-startup","webpack://wax/webpack/startup","webpack://wax/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wax\"] = factory();\n\telse\n\t\troot[\"wax\"] = factory();\n})(this, function() {\nreturn ","function wax(Mustache, Formatters = {}) {\n    Mustache.Formatters = Formatters;\n\n    /*\n     *\tThis will parse a parameter from a filter:\n     *  \n     *      {{ vaue | filter : param1 : param2 : param3 }}\n     */\n    function parseParam(param, lookup) {\n        var isString, isInteger, isFloat;\n        isString  = /^[\\'\\\"](.*)[\\'\\\"]$/g;\n        isInteger = /^[+-]?\\d+$/g;\n        isFloat   = /^[+-]?\\d*\\.\\d+$/g;\n        if (isString.test(param)) {\n            return param.replace(isString, '$1');\n        }\n        if (isInteger.test(param)) {\n            return parseInt(param, 10);\n        }\n        if (isFloat.test(param)) {\n            return parseFloat(param);\n        }\n        return lookup(param);\n    };\n\n    /*\n     *\tThis function will resolve one filter# in the mustache expression:\n     *  \n     *      {{ value | filter1 | filter2 | ... | filterN }}\n     */\n    function applyFilter(expr, fltr, lookup) {\n        var filterExp, paramsExp, match, filter, params = [expr];\n        filterExp = /^\\s*([^\\:]+)/g;\n        paramsExp = /\\:\\s*([\\'][^\\']*[\\']|[\\\"][^\\\"]*[\\\"]|[^\\:]+)\\s*/g;\n        match = filterExp.exec( fltr);\n        filter = match[1].trim();\n        while ((match = paramsExp.exec(fltr))) {\n            params.push(parseParam(match[1].trim(), lookup));\n        }\n\n        if (Mustache.Formatters.hasOwnProperty(filter)) {\n            fltr = Mustache.Formatters[filter];\n            return fltr.apply(fltr, params);\n        }\n        return expr;\n    };\n\n    /*\n    * Keep a copy of the original lookup function of Mustache\n    */\n    const lookup = Mustache.Context.prototype.lookup;\n\n    /*\n    * Overwrite the Context::lookup method to add filter capabilities\n    */\n    Mustache.Context.prototype.lookup = function parseExpression(name) {\n        const formatters = name.split(\"|\");\n        let expression = formatters.shift().trim();\n        // call original lookup method\n        expression = lookup.call(this, expression);\n        // Apply the formatters\n        for (let i = 0, l = formatters.length; i < l; ++i) {\n            expression = applyFilter(expression, formatters[i], this.lookup.bind(this));\n        }\n        return expression;\n    };\n\n    return Mustache;\n}\n\n// Check if mustache was included globally\ntry {\n    if (Mustache) {\n        Mustache = wax(Mustache);\n    }\n} catch (err) { }\n\nmodule.exports = wax;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":[],"sourceRoot":""}